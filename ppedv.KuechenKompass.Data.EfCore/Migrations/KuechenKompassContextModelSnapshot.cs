// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ppedv.KuechenKompass.Data.EfCore;

#nullable disable

namespace ppedv.KuechenKompass.Data.EfCore.Migrations
{
    [DbContext(typeof(KuechenKompassContext))]
    partial class KuechenKompassContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c11c2a87-a47a-4d20-a518-7a66dee010d3"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice Johnson",
                            Number = "12345"
                        },
                        new
                        {
                            Id = new Guid("d22d3b98-b58b-4e31-b629-8b77eee121e4"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bob Smith",
                            Number = "67890"
                        });
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("KCal")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38839014-e040-4f42-f28f-403311168710"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 18,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tomato",
                            Type = 0,
                            Weight = 100m
                        },
                        new
                        {
                            Id = new Guid("4994a115-f151-4f42-0390-514411179821"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 77,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Apple",
                            Type = 1,
                            Weight = 150m
                        },
                        new
                        {
                            Id = new Guid("5aa5b116-0261-4f42-1401-615522280932"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 165,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicken Breast",
                            Type = 2,
                            Weight = 200m
                        },
                        new
                        {
                            Id = new Guid("6bb6c117-1371-4f42-2512-716633391043"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 42,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Milk",
                            Type = 3,
                            Weight = 250m
                        },
                        new
                        {
                            Id = new Guid("7cc7d118-2482-4f42-3623-827744402154"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 195,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rice",
                            Type = 4,
                            Weight = 180m
                        },
                        new
                        {
                            Id = new Guid("8dd8e119-3593-4f42-4734-938855513265"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 0,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Salt",
                            Type = 5,
                            Weight = 5m
                        },
                        new
                        {
                            Id = new Guid("9ee9f120-46a4-4f42-5845-a49966624376"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 2,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Basil",
                            Type = 6,
                            Weight = 10m
                        },
                        new
                        {
                            Id = new Guid("a00a1221-5715-4f42-6956-15a077735487"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 120,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Olive Oil",
                            Type = 7,
                            Weight = 15m
                        },
                        new
                        {
                            Id = new Guid("b11b2222-6826-4f42-7a67-26b188846598"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 77,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sugar",
                            Type = 8,
                            Weight = 20m
                        },
                        new
                        {
                            Id = new Guid("c22c3223-7937-4f42-8b78-37c2999576a9"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 70,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Egg",
                            Type = 9,
                            Weight = 50m
                        });
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d33d4e25-f69d-4f42-a83b-9d88fff233f6"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("c11c2a87-a47a-4d20-a518-7a66dee010d3"),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipeId = new Guid("e33e4c09-f59c-4f42-a73a-9c88fff132f5")
                        },
                        new
                        {
                            Id = new Guid("e44e5f26-a70e-4f42-b94c-0e9900034407"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("c11c2a87-a47a-4d20-a518-7a66dee010d3"),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipeId = new Guid("f44f5d10-a60d-4f42-b84b-0d9900024306")
                        },
                        new
                        {
                            Id = new Guid("05516027-b81f-4f42-c05d-1f0011145519"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("d22d3b98-b58b-4e31-b629-8b77eee121e4"),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipeId = new Guid("05506e11-b71e-4f42-c95c-1e0011135417")
                        },
                        new
                        {
                            Id = new Guid("16627128-c920-4f42-d16e-2f112225661a"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("d22d3b98-b58b-4e31-b629-8b77eee121e4"),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipeId = new Guid("16617f12-c82f-4f42-d06d-2f1122246518")
                        },
                        new
                        {
                            Id = new Guid("27738229-d031-4f42-e27f-31223336772b"),
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("c11c2a87-a47a-4d20-a518-7a66dee010d3"),
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RecipeId = new Guid("27728f13-d930-4f42-e17e-302233357629")
                        });
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CookingInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("KCal")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e33e4c09-f59c-4f42-a73a-9c88fff132f5"),
                            CookingInstructions = "Instructions for Recipe 1",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 500,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PreparationTime = 30,
                            Price = 10.00m
                        },
                        new
                        {
                            Id = new Guid("f44f5d10-a60d-4f42-b84b-0d9900024306"),
                            CookingInstructions = "Instructions for Recipe 2",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 600,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PreparationTime = 45,
                            Price = 12.00m
                        },
                        new
                        {
                            Id = new Guid("05506e11-b71e-4f42-c95c-1e0011135417"),
                            CookingInstructions = "Instructions for Recipe 3",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 700,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PreparationTime = 60,
                            Price = 15.00m
                        },
                        new
                        {
                            Id = new Guid("16617f12-c82f-4f42-d06d-2f1122246518"),
                            CookingInstructions = "Instructions for Recipe 4",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 800,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PreparationTime = 75,
                            Price = 18.00m
                        },
                        new
                        {
                            Id = new Guid("27728f13-d930-4f42-e17e-302233357629"),
                            CookingInstructions = "Instructions for Recipe 5",
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KCal = 900,
                            Modified = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PreparationTime = 90,
                            Price = 20.00m
                        });
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.RecipeIngredient", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = new Guid("e33e4c09-f59c-4f42-a73a-9c88fff132f5"),
                            IngredientId = new Guid("38839014-e040-4f42-f28f-403311168710")
                        },
                        new
                        {
                            RecipeId = new Guid("e33e4c09-f59c-4f42-a73a-9c88fff132f5"),
                            IngredientId = new Guid("4994a115-f151-4f42-0390-514411179821")
                        },
                        new
                        {
                            RecipeId = new Guid("f44f5d10-a60d-4f42-b84b-0d9900024306"),
                            IngredientId = new Guid("5aa5b116-0261-4f42-1401-615522280932")
                        },
                        new
                        {
                            RecipeId = new Guid("f44f5d10-a60d-4f42-b84b-0d9900024306"),
                            IngredientId = new Guid("6bb6c117-1371-4f42-2512-716633391043")
                        },
                        new
                        {
                            RecipeId = new Guid("05506e11-b71e-4f42-c95c-1e0011135417"),
                            IngredientId = new Guid("7cc7d118-2482-4f42-3623-827744402154")
                        },
                        new
                        {
                            RecipeId = new Guid("05506e11-b71e-4f42-c95c-1e0011135417"),
                            IngredientId = new Guid("8dd8e119-3593-4f42-4734-938855513265")
                        },
                        new
                        {
                            RecipeId = new Guid("16617f12-c82f-4f42-d06d-2f1122246518"),
                            IngredientId = new Guid("9ee9f120-46a4-4f42-5845-a49966624376")
                        },
                        new
                        {
                            RecipeId = new Guid("16617f12-c82f-4f42-d06d-2f1122246518"),
                            IngredientId = new Guid("a00a1221-5715-4f42-6956-15a077735487")
                        },
                        new
                        {
                            RecipeId = new Guid("27728f13-d930-4f42-e17e-302233357629"),
                            IngredientId = new Guid("b11b2222-6826-4f42-7a67-26b188846598")
                        },
                        new
                        {
                            RecipeId = new Guid("27728f13-d930-4f42-e17e-302233357629"),
                            IngredientId = new Guid("c22c3223-7937-4f42-8b78-37c2999576a9")
                        });
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Ingredient", b =>
                {
                    b.HasOne("ppedv.KuechenKompass.Model.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Order", b =>
                {
                    b.HasOne("ppedv.KuechenKompass.Model.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ppedv.KuechenKompass.Model.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.RecipeIngredient", b =>
                {
                    b.HasOne("ppedv.KuechenKompass.Model.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ppedv.KuechenKompass.Model.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("ppedv.KuechenKompass.Model.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
